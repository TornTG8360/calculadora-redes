{"ast":null,"code":"var _jsxFileName = \"/workspaces/calculadora-redes/calculadora-ip/src/ResultadosIP.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultadosIP({\n  resultado\n}) {\n  if (!resultado) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resultados\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Resultados:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"IP de Red:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }, this), \" \", resultado.ipRed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"IP de Broadcast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }, this), \" \", resultado.ipBroadcast]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Cantidad de IPs \\xFAtiles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }, this), \" \", resultado.hosts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Rango de IPs \\xFAtiles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }, this), \" \", resultado.rangoUtil]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Clase de IP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }, this), \" \", resultado.clase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tipo de IP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this), \" \", resultado.esPrivada ? 'Privada' : 'Pública']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"representacion-binaria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Representaci\\xF3n Binaria:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"binario-container\",\n        children: resultado.representacionBinaria.ipCompleta.map((octeto, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [octeto, index < 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"separador\",\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 43\n          }, this)]\n        }, `fragment-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leyenda\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 27\n          }, this), \" Porci\\xF3n de Red\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"host-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 27\n          }, this), \" Porci\\xF3n de Host\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultadosIP;\nexport default ResultadosIP;\nvar _c;\n$RefreshReg$(_c, \"ResultadosIP\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultadosIP","resultado","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ipRed","ipBroadcast","hosts","rangoUtil","clase","esPrivada","representacionBinaria","ipCompleta","map","octeto","index","Fragment","_c","$RefreshReg$"],"sources":["/workspaces/calculadora-redes/calculadora-ip/src/ResultadosIP.js"],"sourcesContent":["import React from \"react\";\n\nfunction ResultadosIP({ resultado }) {\n    if (!resultado) return null;\n    return (\n        <div className=\"resultados\">\n            <h3>Resultados:</h3>\n            <p><strong>IP de Red:</strong> {resultado.ipRed}</p>\n            <p><strong>IP de Broadcast:</strong> {resultado.ipBroadcast}</p>\n            <p><strong>Cantidad de IPs útiles:</strong> {resultado.hosts}</p>\n            <p><strong>Rango de IPs útiles:</strong> {resultado.rangoUtil}</p>\n            <p><strong>Clase de IP:</strong> {resultado.clase}</p>\n            <p><strong>Tipo de IP:</strong> {resultado.esPrivada ? 'Privada' : 'Pública'}</p>\n            <div className=\"representacion-binaria\">\n                <h4>Representación Binaria:</h4>\n                <div className=\"binario-container\">\n                    {resultado.representacionBinaria.ipCompleta.map((octeto, index) => (\n                        <React.Fragment key={`fragment-${index}`}>\n                            {octeto}\n                            {index < 3 && <span className=\"separador\">.</span>}\n                        </React.Fragment>\n                    ))}\n                </div>\n                <div className=\"leyenda\">\n                    <span><span className=\"red-dot\"></span> Porción de Red</span>\n                    <span><span className=\"host-dot\"></span> Porción de Host</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultadosIP;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}